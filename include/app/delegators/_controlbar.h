/***********************************************************************************
*
*       ********************************************************************
*       ****          _ C O N T R O L B A R . H  ____  F I L E          ****
*       ********************************************************************
*
*              AUTHOR:      Collin A. Bond.
*               DATED:      June 05, 2025.
*
*       ********************************************************************
*                FILE:      [./ControlBar.h]
*
*
*
**************************************************************************************
**************************************************************************************/
#ifndef _CBAPP_APP_CONTROLBAR_H
#define _CBAPP_APP_CONTROLBAR_H  1



//  1.  INCLUDES    | Headers, Modules, etc...
// *************************************************************************** //
// *************************************************************************** //

//  1.1.        ** MY **  HEADERS...
#include CBAPP_USER_CONFIG
#include "cblib.h"
#include "utility/utility.h"
#include "widgets/widgets.h"
//  #include "app/_init.h"
#include "app/state/state.h"



//  1.2     STANDARD LIBRARY HEADERS...
#include <iostream>         //  <======| std::cout, std::cerr, std::endl, ...
#include <cstdlib>          // C-Headers...
#include <stdio.h>
#include <unistd.h>

#include <string>           //  <======| std::string, ...
#include <string_view>
#include <filesystem>
#include <vector>           //  <======| std::vector, ...
#include <stdexcept>        //  <======| ...
#include <limits.h>
#include <math.h>



//  1.3     "DEAR IMGUI" HEADERS...
#include "imgui.h"
#include "implot.h"
# include "imgui_internal.h"






namespace cb { // BEGINNING NAMESPACE "cb"...
// *************************************************************** //
// *************************************************************** //



// *************************************************************************** //
//                PRIMARY CLASS INTERFACE:
// 		Class-Interface for the "ControlBar" Abstraction.
// *************************************************************************** //
// *************************************************************************** //

class ControlBar
{
//      0.          CONSTANTS AND ALIASES...
// *************************************************************************** //
// *************************************************************************** //
public:

    // *************************************************************************** //
    //      NESTED TYPENAME ALIASES.
    // *************************************************************************** //
    CBAPP_APPSTATE_ALIAS_API
    friend class                                App;
    
    // *************************************************************************** //
    //
    //
    // *************************************************************************** //
    //      STATIC CONSTEXPR CONSTANTS.
    // *************************************************************************** //
    //
    //                                      CONFIGURATION:
    static constexpr const char *               ms_UUID                             = "##Controlbar_ControlsColumns";
    static constexpr int                        ms_NC                               = 9;    //  # Entries in Column.
    static constexpr int                        ms_NE                               = 4;    //  # Entries at END of Columns.
    //
    //
    //                                      DIMENSIONS:
    static constexpr float                      ms_SMALL_ITEM_PAD                   = 4.0f;
    static constexpr float                      ms_BIG_ITEM_PAD                     = 8.0f;
    //
    //
    //                                      WIDGETS:
    static constexpr ImGuiButtonFlags           ms_BUTTON_FLAGS                     = ImGuiButtonFlags_None;
    static constexpr ImGuiOldColumnFlags        ms_COLUMN_FLAGS                     = ImGuiOldColumnFlags_None;
    
    // *************************************************************************** //
    //
    //
    // *************************************************************************** //
    //      REFERENCES TO GLOBAL ARRAYS.
    // *************************************************************************** //
    
//
//
// *************************************************************************** //
// *************************************************************************** //   END "CONSTANTS AND ALIASES".



// *************************************************************************** //
//
//
//      1.          CLASS DATA-MEMBERS...
// *************************************************************************** //
// *************************************************************************** //
protected:

    // *************************************************************************** //
    //      IMPORTANT DATA-MEMBERS.
    // *************************************************************************** //
    
    // *************************************************************************** //
    //
    //
    // *************************************************************************** //
    //      GENERIC DATA.
    // *************************************************************************** //
    bool                                m_initialized                       = false;
    bool                                m_first_frame                       = false;
    //
    ImVec2                              ms_PLOT_SIZE                        = {  };     //  ImVec2(-1, 75);
    ImVec2                              SPACING                             = {  };     //  ImVec2( 0.0f,             style.ItemSpacing.y + style.FramePadding.y      );
    ImVec2                              WIDGET_SIZE                         = {  };     //  ImVec2( -1,               ImGui::GetFrameHeight()                         );
    ImVec2                              BUTTON_SIZE                         = {  };     //  ImVec2( WIDGET_SIZE.y,    WIDGET_SIZE.y                                   );
    
    
    // *************************************************************************** //
    //
    //
    // *************************************************************************** //
    //      STATE VARIABLES.
    // *************************************************************************** //
    ImGuiWindowClass                    m_window_class;
    AppState &                          CBAPP_STATE_NAME;
    
//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "CLASS DATA-MEMBERS".



// *************************************************************************** //
//
//
//      2.A.        PUBLIC MEMBER FUNCTIONS...
// *************************************************************************** //
// *************************************************************************** //
public:
    
    // *************************************************************************** //
    //      INITIALIZATION METHODS.         |   "init.cpp" ...
    // *************************************************************************** //
    explicit                            ControlBar              (app::AppState & );                             //  Def. Constructor.
                                        ~ControlBar             (void);
    void                                initialize              (void);
    
    // *************************************************************************** //
    //      DELETED FUNCTIONS.              |   ...
    // *************************************************************************** //
                                        ControlBar              (const ControlBar &    src)        = delete;   //  Copy. Constructor.
                                        ControlBar              (ControlBar &&         src)        = delete;   //  Move Constructor.
    ControlBar &                        operator =              (const ControlBar &    src)        = delete;   //  Assgn. Operator.
    ControlBar &                        operator =              (ControlBar &&         src)        = delete;   //  Move-Assgn. Operator.
                                        
    // *************************************************************************** //
    //
    //
    // *************************************************************************** //
    //      MAIN API.                       |   "interface.cpp" ...
    // *************************************************************************** //
    void                                Begin                               ([[maybe_unused]] const char *,     [[maybe_unused]] bool *,    [[maybe_unused]] ImGuiWindowFlags);
    void                                BeginOLD                            ([[maybe_unused]] const char *,     [[maybe_unused]] bool *,    [[maybe_unused]] ImGuiWindowFlags);
    //
    //                              SECONDARY API:
    void                                toggle_sidebar                      (void);
    void                                open_sidebar                        (void);
    void                                close_sidebar                       (void);
    void                                toggle_detview                      (void);
    void                                open_detview                        (void);
    void                                close_detview                       (void);
    
//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "PUBLIC MEMBER FUNCS".


    
// *************************************************************************** //
//
//
//      2.B.        PROTECTED MEMBER FUNCTIONS...
// *************************************************************************** //
// *************************************************************************** //
protected:

    // *************************************************************************** //
    //      "RULE-OF ..." FUNCTIONS.        |   "init.cpp" ...
    // *************************************************************************** //
    void                                init                                (void);
    void                                destroy                             (void);
    
    // *************************************************************************** //
    //      MAIN UI FUNCTIONS.              |   "interface.cpp" ...
    // *************************************************************************** //
    //                              MAIN GUI FUNCTIONS:
    void                                draw_all                            (void);
    void                                _draw_info_metrics                  (void);
    
    
    
    // *************************************************************************** //
    
//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "PROTECTED" FUNCTIONS.

    
   
// *************************************************************************** //
//
//
//      2.C         INLINE FUNCTIONS...
// *************************************************************************** //
// *************************************************************************** //
protected:

    // *************************************************************************** //
    //      CENTRALIZED STATE MANAGEMENT FUNCTIONS.
    // *************************************************************************** //
    
        //
        //  ...
        //
    
    // *************************************************************************** //
    //
    //
    //
    // *************************************************************************** //
    //      MISC. UTILITY FUNCTIONS.
    // *************************************************************************** //
    
    //  "column_label"
    inline void                         column_label                        (const char * label)
    { S.PushFont(Font::FootNote);     ImGui::TextDisabled("%s", label);     S.PopFont(); }
    
    //  "column_label"
    inline void                         column_label                        (const char* fmt, ...) {
        S.PushFont(Font::FootNote);
            va_list args;
            va_start(args, fmt);
            ImGui::TextDisabledV(fmt, args);   // forward using the va_list version
            va_end(args);
        S.PopFont();
    }
    
    
    
    // *************************************************************************** //
    
//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "INLINE" FUNCTIONS.






// *************************************************************************** //
// *************************************************************************** //
};//	END "ControlBar" INLINE CLASS DEFINITION.


















// *************************************************************************** //
// *************************************************************************** //
}//   END OF "cb" NAMESPACE.












#endif      //  _CBAPP_SIDEBAR_H  //
// *************************************************************************** //
// *************************************************************************** //
//
//  END.

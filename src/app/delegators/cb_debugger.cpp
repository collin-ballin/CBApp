/***********************************************************************************
*
*       ********************************************************************
*       ****        C B _ D E B U G G E R . C P P  ____  F I L E        ****
*       ********************************************************************
*              AUTHOR:      Collin A. Bond.
*               DATED:      August 28, 2025.
*
**************************************************************************************
**************************************************************************************/
#include "app/app.h"
#include "app/delegators/_detail_view.h"
#include <random>
#include <algorithm>



namespace cb { //     BEGINNING NAMESPACE "cb"...
// *************************************************************************** //
// *************************************************************************** //






// *************************************************************************** //
//
//
//
//      1.      INITIALIZATION  | DEFAULT CONSTRUCTOR, DESTRUCTOR, ETC...
// *************************************************************************** //
// *************************************************************************** //

//  Default Constructor.
//
CBDebugger::CBDebugger(app::AppState & src)
    : S(src)                        {   }


//  "initialize"
//
void CBDebugger::initialize(void)
{
    if ( this->m_initialized )    { return; }
        
    this->init();
    return;
}


//  "init"          | protected
//
void CBDebugger::init(void) {
    this->m_window_class.DockNodeFlagsOverrideSet   = this-> m_docknode_override_flags;
    
    
    return;
}


//  Destructor.
//
CBDebugger::~CBDebugger(void)               { this->destroy(); }


//  "destroy"       | protected
//
void CBDebugger::destroy(void)              {   }



//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "INITIALIZATION".






// *************************************************************************** //
//
//
//
//      1B.     PUBLIC API FUNCTIONS...
// *************************************************************************** //
// *************************************************************************** //

//  "Begin"
//
void CBDebugger::Begin([[maybe_unused]] const char *        uuid,
                       [[maybe_unused]] bool *              p_open,
                       [[maybe_unused]] ImGuiWindowFlags    flags)
{
    [[maybe_unused]] ImGuiIO &      io              = ImGui::GetIO();
    [[maybe_unused]] ImGuiStyle &   style           = ImGui::GetStyle();

    
    
    //      2.      CREATE THE WINDOW AND BEGIN APPENDING WIDGETS INTO IT...
    //  this->m_window_class.DockNodeFlagsOverrideSet   = S.m_detview_window_flags;
    ImGui::SetNextWindowClass( &this->m_window_class );
    //
    ImGui::Begin(uuid, p_open, flags);
    //
    //
        this->Begin_IMPL();
    //
    //
    ImGui::End();
    

    
    return;
}



//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "PUBLIC API".






// *************************************************************************** //
//
//
//
//      2.      "MAIN UI FUNCTIONS"...
// *************************************************************************** //
// *************************************************************************** //

//  "Begin_IMPL"
//
inline void CBDebugger::Begin_IMPL(void)
{





    return;
}



//
//
//
// *************************************************************************** //
// *************************************************************************** //   END "MAIN UI FUNCTIONS".












// *************************************************************************** //
//
//
//
// *************************************************************************** //
// *************************************************************************** //
}//   END OF "cb" NAMESPACE.






// *************************************************************************** //
// *************************************************************************** //
//
//  END.
